# ports exposed by docker-compose
# use e.g. for looking up stats

KAFKA_PORT=4092
KAFKA_UI_PORT=8097
SPARK_MASTER_UI_PORT=5041
SPARK_MASTER_PORT=4041

# TODO  not sure how handle worker-ports, as then need to have scaling capabilities
# at the moment one can still define a port matching matching in docker-compose


#CPU_SPLIT
HARNESS_CPU_SET = "6-7"
TESTED_CPU_SET = "8"

#number of entries per second
RATE_PER_SECOND=900000

#what it is?
COMMIT_FREQUENCY=5

BENCHMARK_TYPE=wordcount 
ENGINE_TYPE=pathway


# engine parameters
WORKERS=1 
CORES=1 


#autocommits are supported for pathway and spark
AUTOCOMMIT_FREQUENCY_MS=5


# aggregated stats (arbitrarily chosen quantiles from latencies)
STATS_SHORT=1


# timestamp,latency list
STATS_TIMELINE=0

# 1 makes stats collector record min, p05, median, p95, max latency for each input timestamp
STATS_TIME_AGGREGATED=1

#line below indicates that the stats-collector outputs 
#aggregated info about latencies, for each pathway time
#as such it is ignored for other frameworks
STATS_PATHWAY_PTIME_AGGREGATED=0

#the number of entries streamer reads before it stops for STREAMER_WAIT_TIME_MS
#stats collector (wordcount / increment) skips the same number of messages when computing timelines / latency percentiles
DATASET_WARMUP_PREFIX_LENGTH=2000000

#the number of ms streamer waits, before resuming streaming
STREAMER_WAIT_TIME_MS=25000

# steamer emits lines to kafka input topic every STREAMER_EMIT_INTERVAL_MS milliseconds
# setting it too small makes streamer not able to keep up
# setting it too high makes the streamer deliver messages in larger batches
# 8 is safe for loads up to around 700k-750k words per second
STREAMER_EMIT_INTERVAL_MS = 8